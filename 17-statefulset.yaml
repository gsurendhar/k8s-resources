apiVersion: v1
kind: Service
metadata:
  name: headless-service-nginx
  labels:
    purpose: statefulset
    project: roboshop
spec:
  clusterIP: None
  selector:
      purpose: statefulset
      project: roboshop
  ports:
    - port: 80
      name: web
---
apiVersion: v1
kind: Service
metadata:
  name: service-nginx 
  labels:
    purpose: statefulset
    project: roboshop
spec:
  selector:
      purpose: statefulset
      project: roboshop
  ports:
    - port: 80
      name: web
---
apiVersion: apps/v1
kind: StatefulSet
metadata: 
  name: nginx-statefulset
  labels:
    purpose: statefulset
    project: roboshop
spec:
  selector:
    matchLabels:  # has to match .spec.template.metadata.labels
      purpose: statefulset
      project: roboshop
  serviceName: "headless-service-nginx"  # this should be headless service
  replicas: 2
  template:
    metadata:
      labels:  # has to match .spec.selector.matchLabels
        purpose: statefulset
        project: roboshop 
    spec:
      containers:
      - name: nginx
        image: nginx
        volumeMounts:
        - name: nginx-statefulset-volume # match the name of volumeClaimTemplate
          mountPath: /usr/share/nginx/html
  # This is nothing but PVC, you can directly create here
  volumeClaimTemplates:
  - metadata:
      name: nginx-statefulset-volume # match the name of volumeMount
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "roboshop-efs"
      resources:
        requests:
          storage: 1Gi
